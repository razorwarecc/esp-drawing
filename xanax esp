local esplibrary = {
    Enabled = true,  -- Enable or disable the ESP
    Name = true,
    NameColor = Color3.fromRGB(255, 255, 255),
    Distance = true,
    DistanceColor = Color3.fromRGB(255, 255, 255),
    Health = true,
    HealthColor = Color3.fromRGB(255, 255, 255),
    Tracer = true,
    TracerColor = Color3.fromRGB(255, 255, 255),
    TracerLocation = "Bottom",
    TracerThickness = 0,
    Weapon = true,
    WeaponColor = Color3.fromRGB(255, 255, 255),
    HeadDot = true,
    HeadDotColor = Color3.fromRGB(255, 255, 255),
    HrpDot = true,
    HrpDotColor = Color3.fromRGB(255, 255, 255),
    Chams = true,
    ChamsDepthMode = "Occluded",
    ChamsFillColor = Color3.fromRGB(255, 0, 0),
    ChamsFillTransparency = 1,
    ChamsOutlineColor = Color3.fromRGB(255, 255, 255),
    ChamsOutlineTransparency = 0,
}
local drawings = {}

function create(player)
    local camera = game.Workspace.CurrentCamera
    local localPlayer = game.Players.LocalPlayer
    local head = player.Character and player.Character:FindFirstChild("Head")
    local hrp = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
    local humanoid = player.Character and player.Character:FindFirstChild("Humanoid")

    if head and humanoid and humanoid.Health > 0 and player ~= localPlayer then
        local headPosition = head.Position
        local wts, onScreen = camera:WorldToViewportPoint(headPosition)
        local wts2 = camera:WorldToViewportPoint(hrp.Position)

        if onScreen then
            local esp = drawings[player.Name]

            if not esp then
                esp = {}  -- Create a table to store ESP data
                if esplibrary.Name then
                    esp.Name = Drawing.new("Text")
                    esp.Name.Visible = true
                    esp.Name.Color = esplibrary.NameColor
                    esp.Name.Outline = true
                    esp.Name.OutlineColor = Color3.fromRGB(0, 0, 0)
                    esp.Name.Size = 13
                    esp.Name.Font = 3
                    esp.Name.Center = true
                    esp.Name.Text = player.Name
                end

                if esplibrary.Tracer then
                    esp.Tracer = Drawing.new("Line")
                    esp.Tracer.Visible = true
                    esp.Tracer.Color = esplibrary.TracerColor
                    esp.Tracer.From = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y)
                    esp.Tracer.Thickness = esplibrary.TracerThickness
                end
                if esplibrary.HeadDot then
                    esp.HeadDot = Drawing.new("Circle")
                    esp.HeadDot.Visible = true
                    esp.HeadDot.Filled = true
                    esp.HeadDot.Color = esplibrary.HeadDotColor
                    esp.HeadDot.Radius = 3
                end
                if esplibrary.Distance then
                    esp.Distance = Drawing.new("Text")
                    esp.Distance.Visible = true
                    esp.Distance.Color = esplibrary.DistanceColor
                    esp.Distance.Outline = true
                    esp.Distance.OutlineColor = Color3.fromRGB(0, 0, 0)
                    esp.Distance.Size = 13
                    esp.Distance.Font = 3
                    esp.Distance.Center = true
                end
                if esplibrary.Health then
                    esp.Health = Drawing.new("Text")
                    esp.Health.Visible = true
                    esp.Health.Color = esplibrary.HealthColor
                    esp.Health.Outline = true
                    esp.Health.OutlineColor = Color3.fromRGB(0, 0, 0)
                    esp.Health.Size = 13
                    esp.Health.Font = 3
                    esp.Health.Center = true
                end
                if esplibrary.HrpDot then
                    esp.HrpDot = Drawing.new("Circle")
                    esp.HrpDot.Visible = true
                    esp.HrpDot.Filled = true
                    esp.HrpDot.Color = esplibrary.HrpDotColor
                    esp.HrpDot.Radius = 3
                end
                if esplibrary.Chams then
                    esp.Chams = Instance.new("Highlight")
                    esp.Chams.Enabled = true
                    esp.Chams.FillColor = esplibrary.ChamsFillColor
                    esp.Chams.OutlineColor = esplibrary.ChamsOutlineColor
                    esp.Chams.DepthMode = esplibrary.ChamsDepthMode
                    esp.Chams.FillTransparency = esplibrary.ChamsFillTransparency
                    esp.Chams.OutlineTransparency = esplibrary.ChamsOutlineTransparency
                end

                drawings[player.Name] = esp
            end
            
            -- Update the ESP elements if they exist
            if esplibrary.Name then
                esp.Name.Position = Vector2.new(wts.X, wts.Y - 20)
                esp.Name.OutlineColor = Color3.fromRGB(0, 0, 0)
            end

            if esplibrary.Tracer then
                esp.Tracer.Color = esplibrary.TracerColor
                esp.Tracer.To = Vector2.new(wts.X, wts.Y)
            end
            if esplibrary.HeadDot then
                esp.HeadDot.Position = Vector2.new(wts.X, wts.Y)
                esp.HeadDot.Color = esplibrary.HeadDotColor
            end
            if esplibrary.Chams then
                esp.Chams.Parent = player.Character
                esp.Chams.FillColor = esplibrary.ChamsFillColor
                esp.Chams.OutlineColor = esplibrary.ChamsOutlineColor
                esp.Chams.DepthMode = esplibrary.ChamsDepthMode
                esp.Chams.FillTransparency = esplibrary.ChamsFillTransparency
                esp.Chams.OutlineTransparency = esplibrary.ChamsOutlineTransparency
            end
            if esplibrary.Distance then
                esp.Distance.Color = esplibrary.DistanceColor
            function tometers(num)
                return num * 0.4
            end
                local localPosition = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
                local playerPosition = player.Character.HumanoidRootPart.Position
                local distance = tometers((localPosition - playerPosition).Magnitude)
                esp.Distance.Text = string.format("%.1fM", distance)
                esp.Distance.Position = Vector2.new(wts.X, wts.Y - 40)
            end
            if esplibrary.Health then
                esp.Health.Text = player.Character.Humanoid.Health.."%"
                esp.Health.Position = Vector2.new(wts2.X, wts2.Y - 20)
                esp.Health.Color = esplibrary.HealthColor
            end
            if esplibrary.HrpDot then
                esp.HrpDot.Position = Vector2.new(wts2.X, wts2.Y)
                esp.HrpDot.Color = esplibrary.HrpDotColor
            end

        elseif drawings[player.Name] then
            -- Remove the ESP if the player's head is offscreen
            for key, value in pairs(drawings[player.Name]) do
                value:Remove()
            end
            drawings[player.Name] = nil
        end
    elseif drawings[player.Name] then
        -- Remove the ESP if the player has no health or head
        for key, value in pairs(drawings[player.Name]) do
            value:Remove()
        end
        drawings[player.Name] = nil
    end
end

game.Players.PlayerAdded:Connect(function(player)
    create(player)
end)

game.Players.PlayerRemoving:Connect(function(player)
    local esp = drawings[player.Name]
    if esp then
        -- Remove all ESP elements for the player
        for key, value in pairs(esp) do
            value:Remove()
        end
        drawings[player.Name] = nil
    end
end)

-- Initialize for existing players
for _, player in pairs(game.Players:GetPlayers()) do
    create(player)
end

-- Continuously update ESP positions with RunService (Stepped)
game:GetService("RunService").Stepped:Connect(function()
    for _, player in pairs(game.Players:GetPlayers()) do
        create(player)
    end
end)
